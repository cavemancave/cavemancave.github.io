<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>caddy on cavemancave</title><link>https://cavemancave.github.io/tags/caddy/</link><description>Recent content in caddy on cavemancave</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 15 Dec 2022 19:07:27 +0000</lastBuildDate><atom:link href="https://cavemancave.github.io/tags/caddy/index.xml" rel="self" type="application/rss+xml"/><item><title>代理折腾记录 - NAS局域网代理</title><link>https://cavemancave.github.io/posts/2022-12-15-setup_proxy_nas/</link><pubDate>Thu, 15 Dec 2022 19:07:27 +0000</pubDate><guid>https://cavemancave.github.io/posts/2022-12-15-setup_proxy_nas/</guid><description> NAS局域网代理 Link to heading 局域网内部分设备无法安装trojan客户端，只能配置http或者socks代理，考虑到功耗，暂由NAS长期打开trojan客户端，再向局域网提供socks代理，其他设备设置代理服务器为NAS的IP地址，端口1080。由privoxy提供http代理，端口8118。 在NAS上新建2个文件夹和文件
/home/config/trojan-go/client.json 内容如上一节
/home/config/privoxy/config forward-socks5 / 0.0.0.0:1080 . listen-address 0.0.0.0:8118 拉起2个容器
p4gefault-trojan-go
vimagick-privoxy
拉起时使用与DockerHost相同的网络，根据Entrypoint确定默认配置文件路径，各自映射配置文件
/home/config/trojan-go/client.json =&amp;gt; /etc/trojan-go/config.json
/home/config/privoxy/config =&amp;gt; /etc/privoxy/config 局域网设备设置代理服务器为NAS 比如我的NAS地址固定为192.168.0.5
socks5 192.168.0.5 1080
http 192.168.0.5 8118 如果想让非本机设备使用代理，设置绑定地址local_addr时应该设置成0.0.0.0 最好在路由器中绑定NAS的ip地址，要不然每次NAS重启，配置都要变</description></item><item><title>代理折腾记录 - trojan-go调试</title><link>https://cavemancave.github.io/posts/2022-12-15-setup_proxy_trojan-go-debug/</link><pubDate>Thu, 15 Dec 2022 17:07:27 +0000</pubDate><guid>https://cavemancave.github.io/posts/2022-12-15-setup_proxy_trojan-go-debug/</guid><description> 优化 Link to heading 端口优化 Link to heading 可以让caddy监听1234端口，trojan-go服务端监听443端口，增加隐秘性，简化防火墙配置，不过caddy搭建的网站的访问速度会变慢。 更新geoip数据库 Link to heading trojan-go已经停止更新，release包中还是比较旧的数据库，如果有需要，可以手动下载替换。
https://github.com/v2fly/geoip/releases/latest/download/geoip.dat
https://github.com/v2fly/domain-list-community/releases/latest/download/dlc.dat geosite.dat最近版本已经变成dlc.dat，下载后需要重命名为geosite.dat 容器中替换的话，可以增加一个目录映射, - /root/trojan-go:/geo 客户端配置中router字段增加2行配置
/root/trojan-go/client.json &amp;#34;geoip&amp;#34;: &amp;#34;/geo/geoip.dat&amp;#34;, &amp;#34;geosite&amp;#34;: &amp;#34;/geo/geosite.dat&amp;#34; 调试 Link to heading 普通调试 Link to heading 测试网页的时候可以使用命令测试，不用打开浏览器 # 查看网页头信息 curl -I http://www.abc.com:80 # 下载网页 curl -L http://www.abc.com:80 查看端口占用 lsof -i :443 容器异常退出调试 Link to heading 在compose.yaml中，修改entrypoint entrypoint : - /bin/sh - /test.sh 在测试脚本test.sh中增加一条阻塞命令 tail -f /dev/null 拉起容器；进入容器；这样就可以查看文件映射结果或者手动执行entrypoint中的命令等操作 docker exec -it trojan-go sh</description></item><item><title>代理折腾记录 - trojan-go客户端</title><link>https://cavemancave.github.io/posts/2022-12-15-setup_proxy_trojan-go-client/</link><pubDate>Thu, 15 Dec 2022 16:07:27 +0000</pubDate><guid>https://cavemancave.github.io/posts/2022-12-15-setup_proxy_trojan-go-client/</guid><description>trojan-go客户端配置 Link to heading linux客户端 Link to heading 先在服务器上测试下
添加容器配置 Link to heading 在/root/compose.yaml中增加一个段落
trojan-client: image: p4gefau1t/trojan-go container_name: trojan-client network_mode: host volumes: - /root/trojan-go/client.json:/etc/trojan-go/config.json 添加客户端配置文件 Link to heading 创建/root/trojan-go/client.json，监听在1080端口。
{ &amp;#34;run_type&amp;#34;: &amp;#34;client&amp;#34;, &amp;#34;local_addr&amp;#34;: &amp;#34;0.0.0.0&amp;#34;, &amp;#34;local_port&amp;#34;: 1080, &amp;#34;remote_addr&amp;#34;: &amp;#34;www.abc.com&amp;#34;, &amp;#34;remote_port&amp;#34;: 1234, &amp;#34;password&amp;#34;: [ &amp;#34;password&amp;#34; ], &amp;#34;ssl&amp;#34;: { &amp;#34;sni&amp;#34;: &amp;#34;www.abc.com&amp;#34; }, &amp;#34;mux&amp;#34; :{ &amp;#34;enabled&amp;#34;: true } } 拉起客户端容器 Link to heading docker-compose up -d trojan-client 测试连接 Link to heading 访问 google, baidu 应该成功，查看日志没有错误</description></item><item><title>代理折腾记录 - trojan-go服务端</title><link>https://cavemancave.github.io/posts/2022-12-15-setup_proxy_trojan-go-server/</link><pubDate>Thu, 15 Dec 2022 15:07:27 +0000</pubDate><guid>https://cavemancave.github.io/posts/2022-12-15-setup_proxy_trojan-go-server/</guid><description>trojan-go服务端配置 Link to heading 添加容器配置 Link to heading /root/compose.yaml
services: trojan-go: image: p4gefau1t/trojan-go container_name: trojan-go network_mode: host volumes: - /root/trojan-go/server.json:/etc/trojan-go/config.json - /root/caddy/data/caddy/certificates/acme-v02.api.letsencrypt.org-directory:/cert 添加服务端配置文件 Link to heading 创建/root/trojan-go/server.json ，监听在端口 1234
{ &amp;#34;run_type&amp;#34;: &amp;#34;server&amp;#34;, &amp;#34;local_addr&amp;#34;: &amp;#34;0.0.0.0&amp;#34;, &amp;#34;local_port&amp;#34;: 1234, &amp;#34;remote_addr&amp;#34;: &amp;#34;www.abc.com&amp;#34;, &amp;#34;remote_port&amp;#34;: 80, &amp;#34;password&amp;#34;: [ &amp;#34;password&amp;#34; ], &amp;#34;ssl&amp;#34;: { &amp;#34;cert&amp;#34;: &amp;#34;/cert/www.abc.com/www.abc.com.crt&amp;#34;, &amp;#34;key&amp;#34;: &amp;#34;/cert/www.abc.com/www.abc.com.key&amp;#34;, &amp;#34;fallback_port&amp;#34;: 443 } } 拉起容器 Link to heading 执行 docker-compose up -d trojan-go 拉起容器 访问 https://www.abc.com:1234 应该成功打开网页 如果出错的话，可以通过 docker logs trojan-go 查看docker日志 服务自启动 Link to heading docker服务是开机自启动的，但是某个容器需要开机启动的话，需要在compose.</description></item><item><title>代理折腾记录 - caddy</title><link>https://cavemancave.github.io/posts/2022-12-15-setup_proxy_caddy/</link><pubDate>Thu, 15 Dec 2022 14:08:27 +0000</pubDate><guid>https://cavemancave.github.io/posts/2022-12-15-setup_proxy_caddy/</guid><description>caddy配置 Link to heading 添加容器 Link to heading 创建/root/caddy.yaml
services: caddy: image: caddy:2 container_name: caddy network_mode: host volumes: - /root/caddy/Caddyfile:/etc/caddy/Caddyfile - /root/www:/srv - /root/caddy/data:/data - /root/caddy/config:/config 创建需要的目录
mkdir /root/caddy/ /root/caddy/data /root/caddy/config /root/www 添加caddy配置文件 Link to heading 创建/root/caddy/Caddyfile
:80, www.abc.com { root * /srv file_server } 添加网页 Link to heading 创建/root/www/index.html
&amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;Hello World&amp;lt;h1&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 启动docker Link to heading docker-compose -f /root/caddy.yaml up -d caddy 访问 http://www.</description></item><item><title>代理折腾记录 - 总</title><link>https://cavemancave.github.io/posts/2022-12-15-setup_proxy/</link><pubDate>Thu, 15 Dec 2022 13:07:27 +0000</pubDate><guid>https://cavemancave.github.io/posts/2022-12-15-setup_proxy/</guid><description>简介 Link to heading 记录本次设置代理的过程。
本次采用Trojan-go + Caddy的方案。Shadowsocks太容易识别，IP已经被封一次，Vray的自研Vmess感觉以后也会被识别，Trojan-go伪装成https网页访问，听起来伪装性更好，不过没看到如何预防流量重放。Caddy配置简单，自动申请证书也很赞。
计划服务端和客户端都使用容器，这样对环境的污染最小，备份一份compose.yaml和代理配置文件夹即可。
目前在NAS上长期运行着代理客户端，并向局域网提供socks和http代理，局域网内部分设备设置代理服务器为NAS地址，经NAS代理出海。
计划测试自动代理配置，不过听说有签名问题，待研究
代理折腾记录 - caddy
代理折腾记录 - trojan-go服务端
代理折腾记录 - trojan-go客户端
代理折腾记录 - trojan-go调试
代理折腾记录 - NAS局域网代理</description></item></channel></rss>