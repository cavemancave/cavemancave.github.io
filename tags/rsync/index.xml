<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rsync on cavemancave</title><link>https://cavemancave.github.io/tags/rsync/</link><description>Recent content in rsync on cavemancave</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 02 Mar 2023 13:07:27 +0000</lastBuildDate><atom:link href="https://cavemancave.github.io/tags/rsync/index.xml" rel="self" type="application/rss+xml"/><item><title>rsync备份文件到NAS上</title><link>https://cavemancave.github.io/posts/2023-03-02-backup_to_nas/</link><pubDate>Thu, 02 Mar 2023 13:07:27 +0000</pubDate><guid>https://cavemancave.github.io/posts/2023-03-02-backup_to_nas/</guid><description> 整理文件夹 Link to heading 因为Synology Photos应用将照片按日期分目录归档，所以其他的零散照片也要分文件夹整理后上传到Photos文件夹 stackexchange - move millions of files into dated folders
shopt -s nullglob for f in *.jpg *.JPG *.jpeg *.png *.mp4; do date=$(date +%F -r &amp;#34;$f&amp;#34;) y=${date:0:4} m=${date:5:2} d=${date:8:2} target=&amp;#34;$y/$m/$d/&amp;#34; mkdir -p &amp;#34;$target&amp;#34; mv &amp;#34;$f&amp;#34; &amp;#34;$target&amp;#34; done rsync上传 Link to heading 之前尝试过远程挂载NAS文件夹，在windows中直接复制粘贴过去的方式，但是经常意外中断，意外中断后，不知道文件有没有破损，也不知道之前拷贝到多少了。所以这次利用rsync增量备份，更放心。rsync是linux命令，可以在WSL中操作，我没装WSL，所以这次是用hyper-v中创建的ubuntu虚拟机。
NAS中使能rsync 控制面板-》终端机和SNMP-》启动SSH功能；控制面板-》文件服务-》rsync-》启动rsync服务 windows上共享文件夹 linux中挂载宿主机文件夹 sudo mount.cifs //192.168.0.6/Users/taishan/Pictures /home/taishan/pic -o user=taishan 查看下文件夹内容，验证下挂载成功 预运行一下 rsync -avzn /home/taishan/pic/ taishan@192.168.0.5:/volume1/photo/Photos/mi10/ |more 去掉n正式运行 rsync -avz /home/taishan/pic/ taishan@192.168.0.5:/volume1/photo/Photos/mi10/ 卸载宿主机文件夹 sudo umount /home/taishan/pic</description></item><item><title>如何将Github Pages构建结果部署到自己的服务器上</title><link>https://cavemancave.github.io/posts/2022-11-11-how_to_deploy_pages_web_to_own_server/</link><pubDate>Fri, 11 Nov 2022 13:07:27 +0000</pubDate><guid>https://cavemancave.github.io/posts/2022-11-11-how_to_deploy_pages_web_to_own_server/</guid><description>如何将github pages构建结果部署到自己的服务器上 Link to heading 简述 Link to heading github pages默认会有一个Actions: pages-build-deployment, 观察源码发现此action会执行jekyll build构建出_site目录，只要把这个目录同步到自己的服务器上，再拉起http服务，就可以在自己的服务器上看到静态网页了，同步目录使用rsync命令，因为scp或者sftp每次都会重复拷贝，比较耗时
步骤： Link to heading 服务器安装rsync 准备服务器的密钥登录 ssh-key-gen生成秘钥 ssh-copy-id user@serverIp拷贝到服务器 cat ~/.ssh/id_rsa 查看私钥 添加Secerts
项目页 -&amp;gt; Settings -&amp;gt; Security -&amp;gt; Secrets -&amp;gt; Actions -&amp;gt; New repository secret添加4个密文 DC_HOST 是服务器域名或者地址 DC_PORT 是ssh登录服务器的端口 DC_USER 是ssh登录服务器的用户名 DC_PASS 是ssh登录服务器的私钥
添加Action 参考代码 Link to heading # Sample workflow for building and deploying a Jekyll site to GitHub Pages name: Deploy Jekyll site to my own server on: # Runs on pushes targeting the default branch push: branches: [&amp;#34;main&amp;#34;] # Allows you to run this workflow manually from the Actions tab workflow_dispatch: jobs: rsync: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v3 - name: Setup Pages uses: actions/configure-pages@v2 - name: Build with Jekyll uses: actions/jekyll-build-pages@v1 with: source: .</description></item></channel></rss>