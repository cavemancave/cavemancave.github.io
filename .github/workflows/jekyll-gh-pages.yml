# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
  
  # Deploy to my server
  # reference https://github.com/invi5H/ssh-action/blob/main/action.yml
  deploy_own:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Tar artifacts
        run: |
          ls -la "$RUNNER_TEMP/"
          zip -r "$RUNNER_TEMP/artifact.zip" "$RUNNER_TEMP/artifact.tar"
      - name: Tar artifacts
        uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.4
        env:
          WELCOME: "ssh scp ssh pipelines"
          LASTSSH: "Doing something after copying"
        with:
          host: ${{ secrets.DC_HOST }}
          user: ${{ secrets.DC_USER }}
          pass: ${{ secrets.DC_PASS }}
          port: ${{ secrets.DC_PORT }}
          connect_timeout: 10s
          first_ssh: |
            caddy stop
            rm -rf /root/www/cavemancave.github.io
            ls -la  \necho $WELCOME 
            mkdir -p /root/www/cavemancave.github.io
          scp: |
            "$RUNNER_TEMP/artifact.zip" => /root/www/cavemancave.github.io
            ./Caddyfile => /root/www/cavemancave.github.io
          last_ssh: |
            echo $LASTSSH 
            cd /root/www/cavemancave.github.io
            ls -la
            unzip artifact.zip
            tar -xvf artifact.tar
            cp Caddyfile _site/
            cd _site
            caddy start


