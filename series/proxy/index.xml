<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Proxy on cavemancave</title><link>https://cavemancave.github.io/series/proxy/</link><description>Recent content in Proxy on cavemancave</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 08 Jul 2023 17:07:27 +0000</lastBuildDate><atom:link href="https://cavemancave.github.io/series/proxy/index.xml" rel="self" type="application/rss+xml"/><item><title>nginx搭建http文件下载服务</title><link>https://cavemancave.github.io/posts/2023-07-08-nginx_file_server/</link><pubDate>Sat, 08 Jul 2023 17:07:27 +0000</pubDate><guid>https://cavemancave.github.io/posts/2023-07-08-nginx_file_server/</guid><description>配置文件 Link to heading NAS创建文件夹
/home/nginx 放网站文件
/home/nginx/file 共享的文件放这里
/home/config/nginx/default.conf, 内容如下:
#/etc/nginx/conf.d/default.conf server { listen *:8119; root /nginx; location / { index index.html index.php; } location /file/ { autoindex on; } } docker映射 Link to heading 创建docker， 映射目录
/home/config/nginx/default.conf =&amp;gt; /etc/nginx/conf.d/default.conf
/home/nginx/ =&amp;gt; /nginx/
访问 Link to heading 访问 http://192.168.0.x:8119/file就可以直接下载文件了</description></item><item><title>代理折腾记录 - git proxy</title><link>https://cavemancave.github.io/posts/2023-05-19-setup_proxy_git/</link><pubDate>Fri, 19 May 2023 17:07:27 +0000</pubDate><guid>https://cavemancave.github.io/posts/2023-05-19-setup_proxy_git/</guid><description> 配置 Link to heading 需要先在本地配置启动好socks代理和http代理，我用的是trojan-go和privoxy，然后
# 配置http代理 git config --global http.proxy &amp;#34;http://127.0.0.1:8118&amp;#34; # 配置socks代理 git config --global core.gitproxy &amp;#34;socks5://127.0.0.1:1080&amp;#34; # 查看配置 git config --global -l</description></item><item><title>代理折腾记录 - trojan-go api</title><link>https://cavemancave.github.io/posts/2023-04-30-setup_proxy_trojan-go-api/</link><pubDate>Sun, 30 Apr 2023 17:07:27 +0000</pubDate><guid>https://cavemancave.github.io/posts/2023-04-30-setup_proxy_trojan-go-api/</guid><description>使用api Link to heading 配置 Link to heading 过程参考使用API动态管理用户
list Link to heading root@brave-cat-2:~# docker exec -it trojan-go sh -c &amp;#34;trojan-go -api-addr 127.0.0.1:10005 -api list&amp;#34; [{&amp;#34;status&amp;#34;:{&amp;#34;user&amp;#34;:{&amp;#34;hash&amp;#34;:&amp;#34;ae3d5ff7c27d9f7972104af0ce08e61b50f8a5d5519b3e3a17fe5b5a&amp;#34;},&amp;#34;traffic_total&amp;#34;:{&amp;#34;upload_traffic&amp;#34;:30032266,&amp;#34;download_traffic&amp;#34;:11098243382},&amp;#34;speed_current&amp;#34;:{},&amp;#34;speed_limit&amp;#34;:{}}}] jq Link to heading 使用jq格式化输出，第一个[会导致jq格式化出错，直接cut掉
root@brave-cat-2:~# docker exec -it trojan-go sh -c &amp;#34;trojan-go -api-addr 127.0.0.1:10005 -api list&amp;#34; |cut -c 2- |jq { &amp;#34;status&amp;#34;: { &amp;#34;user&amp;#34;: { &amp;#34;hash&amp;#34;: &amp;#34;ae3d5ff7c27d9f7972104af0ce08e61b50f8a5d5519b3e3a17fe5b5a&amp;#34; }, &amp;#34;traffic_total&amp;#34;: { &amp;#34;upload_traffic&amp;#34;: 30069318, &amp;#34;download_traffic&amp;#34;: 11134051359 }, &amp;#34;speed_current&amp;#34;: { &amp;#34;upload_speed&amp;#34;: 534, &amp;#34;download_speed&amp;#34;: 11610901 }, &amp;#34;speed_limit&amp;#34;: {} } } parse error: Unmatched &amp;#39;]&amp;#39; at line 1, column 243 单个用户 Link to heading 单个用户的输出可以直接用jq格式化</description></item><item><title>OpenWrt折腾记录</title><link>https://cavemancave.github.io/posts/2022-12-17-openwrt/</link><pubDate>Sat, 17 Dec 2022 13:07:27 +0000</pubDate><guid>https://cavemancave.github.io/posts/2022-12-17-openwrt/</guid><description>简介 Link to heading 记录本次OpenWrt作为旁路由配置过程。
硬件是小米路由器4A千兆版，固件是OpenWrt 21.02.2，家中的网络拓扑是光纤后一个主路由负责DHCP和防火墙，客厅，主卧，书房各一个路由器负责wifi接入。从路由器都设置成中继模式，保证家中设备都在一个局域网内。
wifi同名，开启802.11r/802.11w，保证wifi可以快速漫游。
目前在NAS上长期运行着代理客户端，并向局域网提供socks和http代理，局域网内部分设备设置代理服务器为NAS地址，经NAS代理出海。
计划在其中一台从路由器上设置透明代理，供不能设置代理服务器的设备使用，并减少其他设备手动设置流程。
重置和安装LuCI界面 Link to heading 长按10秒复位按钮可以重置，重置后默认地址是192.168.1.1，root账户无密码，我安装的这个镜像无LuCI界面，需要ssh登录后安装LuCI 电脑网线连接OpenWrt的Lan口，OpenWrt的Wan口连主路由器的Lan口 ssh root@192.168.1.1 opkg update opkg install luci # Providing encryption (https) opkg install luci-ssl /etc/init.d/uhttpd restart 访问网页https://192.168.1.1，无密码成功登录 设置静态ip地址 Link to heading 查看OpenWrt的Wan口分配到的Ip地址192.168.0.12 Lan口设置静态地址为192.168.0.12，关闭DHCP Network-&amp;gt;Interfaces-&amp;gt;LAN
Protocol: Static address
IPv4 address: 192.168.0.12
DHCP Server: Ignore interface 不知道为什么设置成静态地址后，无法登录LuCI界面，怀疑是防火墙的原因。防火墙增加2条规则，允许从Lan和Wan口访问LuCI界面 Network-&amp;gt;Firewall-&amp;gt;Traffic Rules AllowWlan80 From wan, To this device, port 80 Allowlan80 From lan, To this device, port 80 主路由器静态地址分配绑定Ip地址192.</description></item><item><title>代理折腾记录 - NAS局域网代理</title><link>https://cavemancave.github.io/posts/2022-12-15-setup_proxy_nas/</link><pubDate>Thu, 15 Dec 2022 19:07:27 +0000</pubDate><guid>https://cavemancave.github.io/posts/2022-12-15-setup_proxy_nas/</guid><description> NAS局域网代理 Link to heading 局域网内部分设备无法安装trojan客户端，只能配置http或者socks代理，考虑到功耗，暂由NAS长期打开trojan客户端，再向局域网提供socks代理，其他设备设置代理服务器为NAS的IP地址，端口1080。由privoxy提供http代理，端口8118。 在NAS上新建2个文件夹和文件
/home/config/trojan-go/client.json 内容如上一节
/home/config/privoxy/config forward-socks5 / 0.0.0.0:1080 . listen-address 0.0.0.0:8118 拉起2个容器
p4gefault-trojan-go
vimagick-privoxy
拉起时使用与DockerHost相同的网络，根据Entrypoint确定默认配置文件路径，各自映射配置文件
/home/config/trojan-go/client.json =&amp;gt; /etc/trojan-go/config.json
/home/config/privoxy/config =&amp;gt; /etc/privoxy/config 局域网设备设置代理服务器为NAS 比如我的NAS地址固定为192.168.0.5
socks5 192.168.0.5 1080
http 192.168.0.5 8118 如果想让非本机设备使用代理，设置绑定地址local_addr时应该设置成0.0.0.0 最好在路由器中绑定NAS的ip地址，要不然每次NAS重启，配置都要变</description></item><item><title>代理折腾记录 - trojan-go调试</title><link>https://cavemancave.github.io/posts/2022-12-15-setup_proxy_trojan-go-debug/</link><pubDate>Thu, 15 Dec 2022 17:07:27 +0000</pubDate><guid>https://cavemancave.github.io/posts/2022-12-15-setup_proxy_trojan-go-debug/</guid><description> 优化 Link to heading 端口优化 Link to heading 可以让caddy监听1234端口，trojan-go服务端监听443端口，增加隐秘性，简化防火墙配置，不过caddy搭建的网站的访问速度会变慢。 更新geoip数据库 Link to heading trojan-go已经停止更新，release包中还是比较旧的数据库，如果有需要，可以手动下载替换。
https://github.com/v2fly/geoip/releases/latest/download/geoip.dat
https://github.com/v2fly/domain-list-community/releases/latest/download/dlc.dat geosite.dat最近版本已经变成dlc.dat，下载后需要重命名为geosite.dat 容器中替换的话，可以增加一个目录映射, - /root/trojan-go:/geo 客户端配置中router字段增加2行配置
/root/trojan-go/client.json &amp;#34;geoip&amp;#34;: &amp;#34;/geo/geoip.dat&amp;#34;, &amp;#34;geosite&amp;#34;: &amp;#34;/geo/geosite.dat&amp;#34; 调试 Link to heading 普通调试 Link to heading 测试网页的时候可以使用命令测试，不用打开浏览器 # 查看网页头信息 curl -I http://www.abc.com:80 # 下载网页 curl -L http://www.abc.com:80 查看端口占用 lsof -i :443 容器异常退出调试 Link to heading 在compose.yaml中，修改entrypoint entrypoint : - /bin/sh - /test.sh 在测试脚本test.sh中增加一条阻塞命令 tail -f /dev/null 拉起容器；进入容器；这样就可以查看文件映射结果或者手动执行entrypoint中的命令等操作 docker exec -it trojan-go sh</description></item><item><title>代理折腾记录 - trojan-go客户端</title><link>https://cavemancave.github.io/posts/2022-12-15-setup_proxy_trojan-go-client/</link><pubDate>Thu, 15 Dec 2022 16:07:27 +0000</pubDate><guid>https://cavemancave.github.io/posts/2022-12-15-setup_proxy_trojan-go-client/</guid><description>trojan-go客户端配置 Link to heading linux客户端 Link to heading 先在服务器上测试下
添加容器配置 Link to heading 在/root/compose.yaml中增加一个段落
trojan-client: image: p4gefau1t/trojan-go container_name: trojan-client network_mode: host volumes: - /root/trojan-go/client.json:/etc/trojan-go/config.json 添加客户端配置文件 Link to heading 创建/root/trojan-go/client.json，监听在1080端口。
{ &amp;#34;run_type&amp;#34;: &amp;#34;client&amp;#34;, &amp;#34;local_addr&amp;#34;: &amp;#34;0.0.0.0&amp;#34;, &amp;#34;local_port&amp;#34;: 1080, &amp;#34;remote_addr&amp;#34;: &amp;#34;www.abc.com&amp;#34;, &amp;#34;remote_port&amp;#34;: 1234, &amp;#34;password&amp;#34;: [ &amp;#34;password&amp;#34; ], &amp;#34;ssl&amp;#34;: { &amp;#34;sni&amp;#34;: &amp;#34;www.abc.com&amp;#34; }, &amp;#34;mux&amp;#34; :{ &amp;#34;enabled&amp;#34;: true } } 拉起客户端容器 Link to heading docker-compose up -d trojan-client 测试连接 Link to heading 访问 google, baidu 应该成功，查看日志没有错误</description></item><item><title>代理折腾记录 - trojan-go服务端</title><link>https://cavemancave.github.io/posts/2022-12-15-setup_proxy_trojan-go-server/</link><pubDate>Thu, 15 Dec 2022 15:07:27 +0000</pubDate><guid>https://cavemancave.github.io/posts/2022-12-15-setup_proxy_trojan-go-server/</guid><description>trojan-go服务端配置 Link to heading 添加容器配置 Link to heading /root/compose.yaml
services: trojan-go: image: p4gefau1t/trojan-go container_name: trojan-go network_mode: host volumes: - /root/trojan-go/server.json:/etc/trojan-go/config.json - /root/caddy/data/caddy/certificates/acme-v02.api.letsencrypt.org-directory:/cert 添加服务端配置文件 Link to heading 创建/root/trojan-go/server.json ，监听在端口 1234
{ &amp;#34;run_type&amp;#34;: &amp;#34;server&amp;#34;, &amp;#34;local_addr&amp;#34;: &amp;#34;0.0.0.0&amp;#34;, &amp;#34;local_port&amp;#34;: 1234, &amp;#34;remote_addr&amp;#34;: &amp;#34;www.abc.com&amp;#34;, &amp;#34;remote_port&amp;#34;: 80, &amp;#34;password&amp;#34;: [ &amp;#34;password&amp;#34; ], &amp;#34;ssl&amp;#34;: { &amp;#34;cert&amp;#34;: &amp;#34;/cert/www.abc.com/www.abc.com.crt&amp;#34;, &amp;#34;key&amp;#34;: &amp;#34;/cert/www.abc.com/www.abc.com.key&amp;#34;, &amp;#34;fallback_port&amp;#34;: 443 } } 拉起容器 Link to heading 执行 docker-compose up -d trojan-go 拉起容器 访问 https://www.abc.com:1234 应该成功打开网页 如果出错的话，可以通过 docker logs trojan-go 查看docker日志 服务自启动 Link to heading docker服务是开机自启动的，但是某个容器需要开机启动的话，需要在compose.</description></item><item><title>代理折腾记录 - caddy</title><link>https://cavemancave.github.io/posts/2022-12-15-setup_proxy_caddy/</link><pubDate>Thu, 15 Dec 2022 14:08:27 +0000</pubDate><guid>https://cavemancave.github.io/posts/2022-12-15-setup_proxy_caddy/</guid><description>caddy配置 Link to heading 添加容器 Link to heading 创建/root/caddy.yaml
services: caddy: image: caddy:2 container_name: caddy network_mode: host volumes: - /root/caddy/Caddyfile:/etc/caddy/Caddyfile - /root/www:/srv - /root/caddy/data:/data - /root/caddy/config:/config 创建需要的目录
mkdir /root/caddy/ /root/caddy/data /root/caddy/config /root/www 添加caddy配置文件 Link to heading 创建/root/caddy/Caddyfile
:80, www.abc.com { root * /srv file_server } 添加网页 Link to heading 创建/root/www/index.html
&amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;Hello World&amp;lt;h1&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 启动docker Link to heading docker-compose -f /root/caddy.yaml up -d caddy 访问 http://www.</description></item><item><title>代理折腾记录 - 总</title><link>https://cavemancave.github.io/posts/2022-12-15-setup_proxy/</link><pubDate>Thu, 15 Dec 2022 13:07:27 +0000</pubDate><guid>https://cavemancave.github.io/posts/2022-12-15-setup_proxy/</guid><description>简介 Link to heading 记录本次设置代理的过程。
本次采用Trojan-go + Caddy的方案。Shadowsocks太容易识别，IP已经被封一次，Vray的自研Vmess感觉以后也会被识别，Trojan-go伪装成https网页访问，听起来伪装性更好，不过没看到如何预防流量重放。Caddy配置简单，自动申请证书也很赞。
计划服务端和客户端都使用容器，这样对环境的污染最小，备份一份compose.yaml和代理配置文件夹即可。
目前在NAS上长期运行着代理客户端，并向局域网提供socks和http代理，局域网内部分设备设置代理服务器为NAS地址，经NAS代理出海。
计划测试自动代理配置，不过听说有签名问题，待研究
代理折腾记录 - caddy
代理折腾记录 - trojan-go服务端
代理折腾记录 - trojan-go客户端
代理折腾记录 - trojan-go调试
代理折腾记录 - NAS局域网代理</description></item></channel></rss>